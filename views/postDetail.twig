{% extends "base.twig" %}

{% block title %}Accueil{% endblock %}

{% block content %}
    <div class="flex-75-25 p-10 m-10">
        <div class="bg-w m-10 p-10 brd-r brd-mc">
            <div class="flex-profile m-10">
                <div>
                    <img src="{{ post.user.imgSrc }}" class="img-resp img-profile-100w-100h">
                </div>
                <div class="p-10">
                    <h3 class="no-m no-p">{{ post.title }}</h3>
                    <p class="no-m no-p">{{ post.user.pseudo }} | {{ post.prettyDate }}</p>
                </div>
            </div>
            <div class="flex-25-75 brd-bot-mc">
                <div class="p-10">
                    <img src="{{ post.imgSrc }}" class="img-resp">
                </div>
                <div class="p-10 postContent">
                    <p>{{ post.content }}</p>
                    <label class="categorie">{{ post.category }}</label>
                </div>
            </div>

            <ul id="app" class="postComments p-10 m-10">
                <li v-for="comment in comments">
                    <div class="flex-profile-50">
                        <div class="m-10 flex flex-c">
                            <img v-bind:src="comment.user.imgSrc" class="img-resp img-profile-50w-50h">
                        </div>
                        <div class="m-10">
                            <p class="no-p no-m">
                                ${ comment.user.pseudo } | ${ comment.prettyDate }
                            </p>
                            <p class="no-p no-m comment txt-pretty" v-bind:id="'comment-' + comment.id"
                               v-html="comment.content"></p>
                            <p class="no-m no-p" v-if="comment.user.id === {{ user.id }}">
                                <button class="btn blue"
                                        v-bind:onclick="'modificationCommentaire(this,' + comment.id + ')'"
                                        v-bind:id="'button-' + comment.id"> modifier
                                </button>
                            </p>
                        </div>
                    </div>
                </li>
                <li v-if="comments === null">
                    Chargement ...
                </li>
                <li v-if="comments !== null && comments.length === 0">
                    Pas encore de commentaire !
                </li>
            </ul>
            <div class="p-10 m-10">
                <input id="idPost" name="idPost" type="hidden" value="{{ post.id }}">
                <textarea id="content" name="content"></textarea>
                <button class="btn blue" onclick="sendComment()">Envoyer</button>
            </div>
        </div>
        <div>
            <div class="m-10">
                <div class="brd-mc">
                    {% if post.user.id == user.id and post.resolved == false %}
                        <div class="bg-w no-m brd-r-top no-m flex-1 brd-bot-mc p-10">
                            <div class="flex">
                                <a class="m-10" href="./updatePost-{{ post.id }}">
                                    <i class="material-icons">
                                        settings
                                    </i>
                                </a>
                            </div>
                            {% if post.resolved == false %}
                            <button class="btn blue m-10 p-10 full" onclick="updateStatus()">
                                Fermer la question
                            </button>
                            {% endif %}
                        </div>
                    {% endif %}

                    <div class="bg-w no-m no-p brd-r-top">
                        <h2 class="p-10 no-m">Titre</h2>
                        <p class="p-10 no-m brd-bot-mc">
                            txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt
                            txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt
                            txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt
                        </p>
                    </div>
                    <div class="bg-w no-m no-p">
                        <h2 class="p-10 no-m">Titre</h2>
                        <p class="p-10 no-m">
                            txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt
                            txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt
                            txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt txt
                        </p>
                    </div>
                    <div class="bg-gc no-m p-10 brd-r-bot brd-top-mc txt-a-c">
                        <a href="#"> Lien </a>
                    </div>

                </div>
            </div>
            <div class="m-10">
                <div class="brd-r bg-w">
                    <div class="p-10">
                        <img class="img-resp" src="/assets/img/postEx.png">
                        <h2 class="no-p no-m">Article </h2>
                        <p class="muted no-p no-m">date </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block script %}
    <script>
        var app;
        window.onload = function () {
            console.log("document.onload");
            tinymce.init({selector: 'textarea'});
            app = new Vue({
                el: '#app',
                delimiters: ['${', '}'],
                data: {
                    comments: null
                }
            });
            getCommentByIdPost({{ post.id }}, function (err, status, data) {
                for (var y = 0; y < data.length; y++) {
                    data[y]['prettyDate'] = prettyDate(data[y]['createdAt']);
                }
                app.comments = data;
            });
        };

        function updateStatus() {
            getResponse("/api/post/postResolved-{{ post.id }}", function (err, status, data) {
                if (status === 200) {
                    location.reload();
                }
            })
        }

        function refreshComment() {
            getCommentByIdPost({{ post.id }}, function (err, status, data) {
                for (var y = 0; y < data.length; y++) {
                    data[y]['prettyDate'] = prettyDate(data[y]['createdAt']);
                }
                app.comments = null;
                app.comments = data;
            });
        }

        function sendComment() {
            var obj = {
                content: tinyMCE.get('content').getContent(),
                idPost: document.getElementById("idPost").value,
            };
            console.log(obj);
            postComment(obj, function (err, status, data) {
                console.log(err, status, data);
                refreshComment();
            });
        }

        var modifying = null;

        function modificationCommentaire(btn, idComment) {
            if (modifying !== idComment) {
                if (modifying !== null && modifying !== idComment) {
                    document.getElementById('comment-' + modifying).innerText = document.getElementById("textarea-" + modifying).value;
                    document.getElementById('button-' + modifying).innerText = "modifier";
                }
                var commentElement = document.getElementById('comment-' + idComment);
                var commentTxt = commentElement.textContent;

                commentElement.innerHTML = "";

                var textArea = document.createElement("textarea");
                textArea.id = "textarea-" + idComment;
                textArea.value = commentTxt;

                commentElement.appendChild(textArea);
                btn.textContent = "Envoyer";
                tinymce.init({selector: 'textarea'});
                modifying = idComment;
            } else {
                var obj = {
                    content: tinyMCE.get(("textarea-" + idComment)).getContent(),
                };
                updateComment(obj, idComment, function (err, status, data) {
                    console.log(err, status, data);
                    refreshComment();
                });
                modifying = null;
            }
        }
    </script>
{% endblock %}